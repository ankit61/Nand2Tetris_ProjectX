class LinkedListBullets {
    field BulletNode head;
    field int sz;
    
    constructor LinkedListBullets new() {
        let head = null;
        let sz = 0;
        return this;
    }

    method void push(Bullet t) {
        let head = BulletNode.new(t, head);
        let sz = sz + 1;
        return;
    }

    method BulletNode getHead() {
        return head;
    }

    method int getSize() {
        return sz;
    }

    method BulletNode erase(BulletNode prev) {
        var BulletNode temp;
        if(prev = null) { //deleting head
            if(head = null) {
                do Output.printString("error: deleting from empty list");
                do Sys.halt();
            }
            let temp = head;
            let head = head.getNext();
            do temp.dispose();
        }
        else {
            let temp = prev.getNext();
            do prev.setNext(temp.getNext());
            do temp.dispose();
        }
        if(prev = null) {
            return head;
        }
        return prev.getNext();
    }

    method void print() {
        var BulletNode b;
        let b = head;
        while(~(b = null)) {
            do Output.printInt(b);
            do Output.printString(" ");
            let b = b.getNext();
        }
        do Output.println();
        return;
    }

    method void dispose() {
        do head.dispose();
        do Memory.deAlloc(this);
        return;
    }
}